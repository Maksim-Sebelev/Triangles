#define COORDINATE_TYPE float
#include "cringe/create_run_program_file.hpp"


/*
ПОЧЕМУ КОДОГЕНЕРАЦИЯ ЧЕРЕЗ #include - ЭТО ПИК ПРОГРАММИРОВАНИЯ

БРО, ТЫ ДАЖЕ НЕ ПРЕДСТАВЛЯЕШЬ НАСКОЛЬКО ЭТО ГЕНИАЛЬНО!

1. ЭТО ЖЕ КАК ЧИТЫ В КС 1.6!
Зачем писать 100500 case'ов в switch, когда можно просто:
#include "all_my_skills.hpp"
И ВСЁ РАБОТАЕТ! Это как вставить код из интернета, но КРУЧЕ!

2. КОМПИЛЯТОР ОТДЫХАЕТ!
Раньше он тупил на больших switch-case, а теперь просто подставляет
текст как в Ворде 2003. ПРОСТО И ГЕНИАЛЬНО!

3. ДЛЯ КОМАНДНОЙ РАБОТЫ - ВООБЩЕ КОСМОС!
Новый программист приходит в проект, видит:
#include "magic.h"
И сразу понимает - тут работают БОГИ! Не то что ваши ООП...

4. ОТЛАДКА? А ЗАЧЕМ?
Если код не работает, просто перегенерируй файл!
Это как перезагрузить ПК - 90% проблем решаются!

5. УНИВЕРСАЛЬНОСТЬ!
Хочешь поменять логику во ВСЕХ switch'ах проекта?
Правишь ОДИН .hpp файл и БАМ! - всё обновилось!
Это ж как в Матрице - изменил код в одном месте, 
и весь мир подстроился!

6. ЭТО ЖЕ ПРОГНОЗИРУЕМО!
Компилятор внезапно меняет оптимизации? 
А наш #include всегда работает ОДИНАКОВО!
Консервативно? ДА! Надежно? ТОЧНО!

7. КОРОЧЕ, ЭТО НАШЕ ВСЁ!
Зачем учить шаблоны, концепты, constexpr, 
когда есть проверенный временем #include? 
Это как дедовский метод - работает и не надо мозг напрягать!

P.S. Если кто-то говорит "это плохая практика" - 
он просто не умеет это готовить! 

// Пример гениального кода:
switch(problem_type) {
    #include "all_solutions.inl"  // ВСЕ РЕШЕНИЯ У МЕНЯ ЗАГОТОВЛЕНЫ!
    default: 
        #include "panic_mode.inl" // ДАЖЕ ЕСЛИ ЧТО-ТО ПОЙДЁТ НЕ ТАК!
}
*/